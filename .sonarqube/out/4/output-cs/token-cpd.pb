ö3
uC:\DEV\MAGVA\TransacoesFinanceiras\src\GlobalBase\WebHost\MAGVA.GlobalBase.WebHost.Customization\WebHostExtensions.cs
	namespace 	
	Microsoft
 
. 

AspNetCore 
. 
Hosting &
{ 
public 

static 
class 
IWebHostExtensions *
{ 
public 
static 
bool 
IsInKubernetes )
() *
this* .
IWebHost/ 7
webHost8 ?
)? @
{ 	
var 
cfg 
= 
webHost 
. 
Services &
.& '

GetService' 1
<1 2
IConfiguration2 @
>@ A
(A B
)B C
;C D
var 
orchestratorType  
=! "
cfg# &
.& '
GetValue' /
</ 0
string0 6
>6 7
(7 8
$str8 J
)J K
;K L
return 
orchestratorType #
?# $
.$ %
ToUpper% ,
(, -
)- .
==/ 1
$str2 7
;7 8
} 	
public 
static 
IWebHost 
MigrateDbContext /
</ 0
TContext0 8
>8 9
(9 :
this: >
IWebHost? G
webHostH O
,O P
ActionQ W
<W X
TContextX `
,` a
IServiceProviderb r
>r s
seedert z
)z {
where	| Å
TContext
Ç ä
:
ã å
	DbContext
ç ñ
{ 	
var 
underK8s 
= 
webHost "
." #
IsInKubernetes# 1
(1 2
)2 3
;3 4
using 
( 
var 
scope 
= 
webHost &
.& '
Services' /
./ 0
CreateScope0 ;
(; <
)< =
)= >
{ 
var 
services 
= 
scope $
.$ %
ServiceProvider% 4
;4 5
var 
logger 
= 
services %
.% &
GetRequiredService& 8
<8 9
ILogger9 @
<@ A
TContextA I
>I J
>J K
(K L
)L M
;M N
var   
context   
=   
services   &
.  & '

GetService  ' 1
<  1 2
TContext  2 :
>  : ;
(  ; <
)  < =
;  = >
try"" 
{## 
logger$$ 
.$$ 
LogInformation$$ )
($$) *
$str$$* f
,$$f g
typeof$$h n
($$n o
TContext$$o w
)$$w x
.$$x y
Name$$y }
)$$} ~
;$$~ 
if&& 
(&& 
underK8s&&  
)&&  !
{'' 
InvokeSeeder(( $
((($ %
seeder((% +
,((+ ,
context((- 4
,((4 5
services((6 >
)((> ?
;((? @
})) 
else** 
{++ 
var,, 
retry,, !
=,," #
Policy,,$ *
.,,* +
Handle,,+ 1
<,,1 2
SqlException,,2 >
>,,> ?
(,,? @
),,@ A
.-- 
WaitAndRetry-- *
(--* +
new--+ .
TimeSpan--/ 7
[--7 8
]--8 9
{.. 
TimeSpan// %
.//% &
FromSeconds//& 1
(//1 2
$num//2 3
)//3 4
,//4 5
TimeSpan00 %
.00% &
FromSeconds00& 1
(001 2
$num002 3
)003 4
,004 5
TimeSpan11 %
.11% &
FromSeconds11& 1
(111 2
$num112 3
)113 4
,114 5
}22 
)22 
;22  
retry44 
.44 
Execute44 %
(44% &
(44& '
)44' (
=>44) +
InvokeSeeder44, 8
(448 9
seeder449 ?
,44? @
context44A H
,44H I
services44J R
)44R S
)44S T
;44T U
}55 
logger77 
.77 
LogInformation77 )
(77) *
$str77* e
,77e f
typeof77g m
(77m n
TContext77n v
)77v w
.77w x
Name77x |
)77| }
;77} ~
}88 
catch99 
(99 
	Exception99  
ex99! #
)99# $
{:: 
logger;; 
.;; 
LogError;; #
(;;# $
ex;;$ &
,;;& '
$str;;( x
,;;x y
typeof	;;z Ä
(
;;Ä Å
TContext
;;Å â
)
;;â ä
.
;;ä ã
Name
;;ã è
)
;;è ê
;
;;ê ë
if<< 
(<< 
underK8s<<  
)<<  !
{== 
throw>> 
;>> 
}?? 
}@@ 
}AA 
returnCC 
webHostCC 
;CC 
}DD 	
privateFF 
staticFF 
voidFF 
InvokeSeederFF (
<FF( )
TContextFF) 1
>FF1 2
(FF2 3
ActionFF3 9
<FF9 :
TContextFF: B
,FFB C
IServiceProviderFFD T
>FFT U
seederFFV \
,FF\ ]
TContextFF^ f
contextFFg n
,FFn o
IServiceProvider	FFp Ä
services
FFÅ â
)
FFâ ä
whereGG 
TContextGG 
:GG 
	DbContextGG &
{HH 	
tryII 
{JJ 
contextKK 
.KK 
DatabaseKK  
.KK  !
MigrateKK! (
(KK( )
)KK) *
;KK* +
seederLL 
(LL 
contextLL 
,LL 
servicesLL  (
)LL( )
;LL) *
}MM 
catchNN 
{OO 
ThreadPP 
.PP 
SleepPP 
(PP 
$numPP "
)PP" #
;PP# $
contextQQ 
.QQ 
DatabaseQQ  
.QQ  !
MigrateQQ! (
(QQ( )
)QQ) *
;QQ* +
seederRR 
(RR 
contextRR 
,RR 
servicesRR  (
)RR( )
;RR) *
}SS 
}TT 	
}UU 
}VV 